// Code generated by protoc-gen-go. DO NOT EDIT.
// source: crypto.proto

package crypto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EncryptedText struct {
	EncryptedData        string   `protobuf:"bytes,1,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptedText) Reset()         { *m = EncryptedText{} }
func (m *EncryptedText) String() string { return proto.CompactTextString(m) }
func (*EncryptedText) ProtoMessage()    {}
func (*EncryptedText) Descriptor() ([]byte, []int) {
	return fileDescriptor_527278fb02d03321, []int{0}
}

func (m *EncryptedText) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptedText.Unmarshal(m, b)
}
func (m *EncryptedText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptedText.Marshal(b, m, deterministic)
}
func (m *EncryptedText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptedText.Merge(m, src)
}
func (m *EncryptedText) XXX_Size() int {
	return xxx_messageInfo_EncryptedText.Size(m)
}
func (m *EncryptedText) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptedText.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptedText proto.InternalMessageInfo

func (m *EncryptedText) GetEncryptedData() string {
	if m != nil {
		return m.EncryptedData
	}
	return ""
}

type DecryptedText struct {
	TextData             string   `protobuf:"bytes,1,opt,name=text_data,json=textData,proto3" json:"text_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptedText) Reset()         { *m = DecryptedText{} }
func (m *DecryptedText) String() string { return proto.CompactTextString(m) }
func (*DecryptedText) ProtoMessage()    {}
func (*DecryptedText) Descriptor() ([]byte, []int) {
	return fileDescriptor_527278fb02d03321, []int{1}
}

func (m *DecryptedText) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptedText.Unmarshal(m, b)
}
func (m *DecryptedText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptedText.Marshal(b, m, deterministic)
}
func (m *DecryptedText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptedText.Merge(m, src)
}
func (m *DecryptedText) XXX_Size() int {
	return xxx_messageInfo_DecryptedText.Size(m)
}
func (m *DecryptedText) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptedText.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptedText proto.InternalMessageInfo

func (m *DecryptedText) GetTextData() string {
	if m != nil {
		return m.TextData
	}
	return ""
}

type TrackableDecryptedRequest struct {
	JobId                string         `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Data                 *DecryptedText `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TrackableDecryptedRequest) Reset()         { *m = TrackableDecryptedRequest{} }
func (m *TrackableDecryptedRequest) String() string { return proto.CompactTextString(m) }
func (*TrackableDecryptedRequest) ProtoMessage()    {}
func (*TrackableDecryptedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_527278fb02d03321, []int{2}
}

func (m *TrackableDecryptedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackableDecryptedRequest.Unmarshal(m, b)
}
func (m *TrackableDecryptedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackableDecryptedRequest.Marshal(b, m, deterministic)
}
func (m *TrackableDecryptedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackableDecryptedRequest.Merge(m, src)
}
func (m *TrackableDecryptedRequest) XXX_Size() int {
	return xxx_messageInfo_TrackableDecryptedRequest.Size(m)
}
func (m *TrackableDecryptedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackableDecryptedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrackableDecryptedRequest proto.InternalMessageInfo

func (m *TrackableDecryptedRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *TrackableDecryptedRequest) GetData() *DecryptedText {
	if m != nil {
		return m.Data
	}
	return nil
}

type TrackableEncryptedRequest struct {
	JobId                string         `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Data                 *EncryptedText `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TrackableEncryptedRequest) Reset()         { *m = TrackableEncryptedRequest{} }
func (m *TrackableEncryptedRequest) String() string { return proto.CompactTextString(m) }
func (*TrackableEncryptedRequest) ProtoMessage()    {}
func (*TrackableEncryptedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_527278fb02d03321, []int{3}
}

func (m *TrackableEncryptedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackableEncryptedRequest.Unmarshal(m, b)
}
func (m *TrackableEncryptedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackableEncryptedRequest.Marshal(b, m, deterministic)
}
func (m *TrackableEncryptedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackableEncryptedRequest.Merge(m, src)
}
func (m *TrackableEncryptedRequest) XXX_Size() int {
	return xxx_messageInfo_TrackableEncryptedRequest.Size(m)
}
func (m *TrackableEncryptedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackableEncryptedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrackableEncryptedRequest proto.InternalMessageInfo

func (m *TrackableEncryptedRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *TrackableEncryptedRequest) GetData() *EncryptedText {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*EncryptedText)(nil), "crypto.EncryptedText")
	proto.RegisterType((*DecryptedText)(nil), "crypto.DecryptedText")
	proto.RegisterType((*TrackableDecryptedRequest)(nil), "crypto.TrackableDecryptedRequest")
	proto.RegisterType((*TrackableEncryptedRequest)(nil), "crypto.TrackableEncryptedRequest")
}

func init() { proto.RegisterFile("crypto.proto", fileDescriptor_527278fb02d03321) }

var fileDescriptor_527278fb02d03321 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x2e, 0xaa, 0x2c,
	0x28, 0xc9, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0xcc, 0xb8, 0x78,
	0x5d, 0xf3, 0xc0, 0xec, 0xd4, 0x94, 0x90, 0xd4, 0x8a, 0x12, 0x21, 0x55, 0x2e, 0xbe, 0x54, 0x98,
	0x40, 0x7c, 0x4a, 0x62, 0x49, 0xa2, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x2f, 0x5c, 0xd4,
	0x25, 0xb1, 0x24, 0x51, 0x49, 0x87, 0x8b, 0xd7, 0x25, 0x15, 0x59, 0x9f, 0x34, 0x17, 0x67, 0x49,
	0x6a, 0x45, 0x09, 0xb2, 0x16, 0x0e, 0x90, 0x00, 0x58, 0x75, 0x2c, 0x97, 0x64, 0x48, 0x51, 0x62,
	0x72, 0x76, 0x62, 0x52, 0x4e, 0x2a, 0x5c, 0x5b, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90,
	0x28, 0x17, 0x5b, 0x56, 0x7e, 0x52, 0x7c, 0x66, 0x0a, 0x54, 0x1b, 0x6b, 0x56, 0x7e, 0x92, 0x67,
	0x8a, 0x90, 0x26, 0x17, 0x0b, 0xd8, 0x2c, 0x26, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x51, 0x3d, 0xa8,
	0xf3, 0x51, 0x6c, 0x0d, 0x02, 0x2b, 0x41, 0x31, 0x1e, 0xee, 0x1b, 0xf2, 0x8c, 0x47, 0x09, 0x0c,
	0x88, 0xf1, 0x46, 0xf3, 0x18, 0xb9, 0xd8, 0x9c, 0xc1, 0xd2, 0x42, 0x9e, 0x5c, 0xdc, 0x50, 0x15,
	0x20, 0x7f, 0x09, 0x29, 0xc2, 0xb4, 0xe1, 0xf4, 0x9d, 0x14, 0x76, 0x93, 0x95, 0x18, 0x40, 0x46,
	0x41, 0x15, 0xe3, 0x30, 0x0a, 0xdd, 0x27, 0x52, 0xd8, 0xc3, 0x40, 0x89, 0x21, 0x89, 0x0d, 0x1c,
	0xa7, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x30, 0xaa, 0xae, 0x64, 0xe3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CryptoClient is the client API for Crypto service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CryptoClient interface {
	EncryptData(ctx context.Context, in *TrackableDecryptedRequest, opts ...grpc.CallOption) (*EncryptedText, error)
	DecryptData(ctx context.Context, in *TrackableEncryptedRequest, opts ...grpc.CallOption) (*DecryptedText, error)
}

type cryptoClient struct {
	cc *grpc.ClientConn
}

func NewCryptoClient(cc *grpc.ClientConn) CryptoClient {
	return &cryptoClient{cc}
}

func (c *cryptoClient) EncryptData(ctx context.Context, in *TrackableDecryptedRequest, opts ...grpc.CallOption) (*EncryptedText, error) {
	out := new(EncryptedText)
	err := c.cc.Invoke(ctx, "/crypto.Crypto/EncryptData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cryptoClient) DecryptData(ctx context.Context, in *TrackableEncryptedRequest, opts ...grpc.CallOption) (*DecryptedText, error) {
	out := new(DecryptedText)
	err := c.cc.Invoke(ctx, "/crypto.Crypto/DecryptData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CryptoServer is the server API for Crypto service.
type CryptoServer interface {
	EncryptData(context.Context, *TrackableDecryptedRequest) (*EncryptedText, error)
	DecryptData(context.Context, *TrackableEncryptedRequest) (*DecryptedText, error)
}

// UnimplementedCryptoServer can be embedded to have forward compatible implementations.
type UnimplementedCryptoServer struct {
}

func (*UnimplementedCryptoServer) EncryptData(ctx context.Context, req *TrackableDecryptedRequest) (*EncryptedText, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EncryptData not implemented")
}
func (*UnimplementedCryptoServer) DecryptData(ctx context.Context, req *TrackableEncryptedRequest) (*DecryptedText, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecryptData not implemented")
}

func RegisterCryptoServer(s *grpc.Server, srv CryptoServer) {
	s.RegisterService(&_Crypto_serviceDesc, srv)
}

func _Crypto_EncryptData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrackableDecryptedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CryptoServer).EncryptData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crypto.Crypto/EncryptData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CryptoServer).EncryptData(ctx, req.(*TrackableDecryptedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crypto_DecryptData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrackableEncryptedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CryptoServer).DecryptData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crypto.Crypto/DecryptData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CryptoServer).DecryptData(ctx, req.(*TrackableEncryptedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Crypto_serviceDesc = grpc.ServiceDesc{
	ServiceName: "crypto.Crypto",
	HandlerType: (*CryptoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EncryptData",
			Handler:    _Crypto_EncryptData_Handler,
		},
		{
			MethodName: "DecryptData",
			Handler:    _Crypto_DecryptData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "crypto.proto",
}
